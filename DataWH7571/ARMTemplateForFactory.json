{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DataWH7571"
		},
		"AzureDataLakeStorageLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorageLS'"
		},
		"RestServiceLS_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RestServiceLS'"
		},
		"AzureBlobLS_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'AzureBlobLS'"
		},
		"AzureDataLakeStorageLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://store7571.dfs.core.windows.net/"
		},
		"AzureDatabricksLS_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0912-060534-fpkax81v"
		},
		"AzureKeyVaultLS_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://storecredits7571.vault.azure.net/"
		},
		"RestServiceLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.openweathermap.org/data/2.5/forecast?q=',linkedService().city,'&','appid=af289f55c208e29ce42b959fa28c1b43')}"
		},
		"RestServiceLS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "manibaddireddy7571@gmail.com"
		},
		"SnowflakeBlobLS_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'SnowflakeBlobLS'"
		},
		"SnowflakeLS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "weather_db"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Weather_Snowflake_FL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "loop every city",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cities",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "RestResourceDS",
											"type": "DatasetReference",
											"parameters": {
												"city": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "JsonDS",
											"type": "DatasetReference",
											"parameters": {
												"city": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "data cleaning",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "loop every city",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/grandhikrishnaprasad@gmail.com/weather data"
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricksLS",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "adls to snowflake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "data cleaning",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "SnowflakeV2Sink",
								"importSettings": {
									"type": "SnowflakeImportCopyCommand"
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "SnowflakeBlobLS",
									"type": "LinkedServiceReference"
								},
								"path": "stagging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "lat",
											"type": "Double"
										},
										"sink": {
											"name": "LAT",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "lon",
											"type": "Double"
										},
										"sink": {
											"name": "LON",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "country",
											"type": "String"
										},
										"sink": {
											"name": "COUNTRY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "Int64"
										},
										"sink": {
											"name": "ID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "population",
											"type": "Int64"
										},
										"sink": {
											"name": "POPULATION",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "sunrise",
											"type": "Int64"
										},
										"sink": {
											"name": "SUNRISE",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "sunset",
											"type": "Int64"
										},
										"sink": {
											"name": "SUNSET",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "timezone",
											"type": "Int64"
										},
										"sink": {
											"name": "TIMEZONE",
											"type": "Int64"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ParquetDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SnowflakeTableDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"cities": {
						"type": "array",
						"defaultValue": [
							"kakinada",
							"goa"
						]
					}
				},
				"folder": {
					"name": "WeatherApi_to_Snowflake"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricksLS')]",
				"[concat(variables('factoryId'), '/datasets/ParquetDS')]",
				"[concat(variables('factoryId'), '/datasets/SnowflakeTableDS')]",
				"[concat(variables('factoryId'), '/linkedServices/SnowflakeBlobLS')]",
				"[concat(variables('factoryId'), '/datasets/RestResourceDS')]",
				"[concat(variables('factoryId'), '/datasets/JsonDS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/interview problem')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "weeknum",
							"value": {
								"value": "@dayOfWeek(utcNow('yyyy-MM-dd'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@and(greaterOrEquals(variables('weeknum'), 0), lessOrEquals(variables('weeknum'), 6))\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "stage to archive",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "JsonStaticDS",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "JsonSinkDS",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"daynum": {
						"type": "Integer"
					},
					"weeknum": {
						"type": "Integer"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JsonStaticDS')]",
				"[concat(variables('factoryId'), '/datasets/JsonSinkDS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"city": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().city",
							"type": "Expression"
						},
						"fileSystem": "stage"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonSinkDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "archive"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JsonStaticDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "kakinada",
						"fileSystem": "stage"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParquetDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorageLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "curated"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorageLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResourceDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestServiceLS",
					"type": "LinkedServiceReference",
					"parameters": {
						"city": {
							"value": "@dataset().city",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"city": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestServiceLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeTableDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SnowflakeLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "LAT",
						"type": "FLOAT"
					},
					{
						"name": "LON",
						"type": "FLOAT"
					},
					{
						"name": "COUNTRY",
						"type": "VARCHAR"
					},
					{
						"name": "ID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "NAME",
						"type": "VARCHAR"
					},
					{
						"name": "POPULATION",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "SUNRISE",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "SUNSET",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "TIMEZONE",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "WEATHER_SCH",
					"table": "WEATHER_TB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SnowflakeLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('AzureBlobLS_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorageLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorageLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorageLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricksLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4317593619875113.13.azuredatabricks.net",
					"accessToken": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVaultLS",
							"type": "LinkedServiceReference"
						},
						"secretName": "databricks-acces-stokens"
					},
					"existingClusterId": "[parameters('AzureDatabricksLS_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVaultLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVaultLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVaultLS_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestServiceLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"city": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestServiceLS_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('RestServiceLS_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RestServiceLS_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeBlobLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('SnowflakeBlobLS_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "lw63441.central-india.azure",
					"user": "MANI",
					"database": "[parameters('SnowflakeLS_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVaultLS",
							"type": "LinkedServiceReference"
						},
						"secretName": "snowflake"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVaultLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerAT3PM')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Weather_Snowflake_FL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-09-21T15:10:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Weather_Snowflake_FL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerEveryMonth1or2or3')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "will trigger 1st of every month if it is not a Saturday or Sunday\nif it is Saturday it will trigger on 3rd if it is Sunday it will trigger on 2nd.",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "interview problem",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2024-09-22T11:40:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"monthDays": [
								21,
								22,
								23
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/interview problem')]"
			]
		}
	]
}